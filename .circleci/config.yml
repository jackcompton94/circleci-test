version: 2.1

commands:
  send_slack_failure: &slack_failed
    steps:
      - run:
          name: Simulated Slack Failure Alert
          command: echo "üí• Job failed due to timeout! (Simulated Slack alert)"

  with_job_timeout:
    description: "Run job with timeout, simulate Slack alert if timeout hits"
    parameters:
      timeout_minutes:
        type: integer
      steps:
        type: steps
    steps:
      - run:
          name: Start Timeout Monitor (<< parameters.timeout_minutes >>m)
          background: true
          command: |
            sleep $(( << parameters.timeout_minutes >> * 60 ))
            echo "‚è∞ Timeout hit after << parameters.timeout_minutes >> minutes!"
            touch /tmp/TIMED_OUT

      - steps: << parameters.steps >>

      # Handle timeout if the marker file exists
      - when:
          condition:
            and:
              - run:
                  name: Check for Timeout
                  command: test -f /tmp/TIMED_OUT
          steps:
            - *slack_failed
            - run:
                name: Kill CircleCI
                command: |
                  echo "üî™ Killing CircleCI processes..."
                  pkill -SIGKILL -f "circleci" || true
                  exit 1

jobs:
  simulate_lengthy_process:
    docker:
      - image: cimg/base:stable
    steps:
      - with_job_timeout:
          timeout_minutes: 1
          steps:
            - run:
                name: Simulate Work
                command: |
                  echo "Starting work..."
                  sleep 120
                  echo "Work complete."

workflows:
  test:
    jobs:
      - simulate_lengthy_process
