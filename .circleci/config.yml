version: 2.1

commands:
  # Define the timeout wrapper (add this once)
  with_job_timeout:
    description: "Kills entire job after timeout"
    parameters:
      timeout_minutes:
        type: integer
      steps:
        type: steps
    steps:
      - run:
          name: "⏰ Timeout Monitor (<< parameters.timeout_minutes >>m)"
          background: true
          command: |
            sleep $(( << parameters.timeout_minutes >> * 60 ))
            echo "ERROR: Job timed out after << parameters.timeout_minutes >> minutes!"
            pkill -SIGKILL -f "circleci" || true
            exit 1
      - steps: << parameters.steps >>

jobs:
  # Test job with 1-minute timeout (easy to verify)
  test_timeout:
    docker:
      - image: cimg/base:2024.01
    steps:
      - with_job_timeout:
          timeout_minutes: 1  # Will fail after 60 seconds
          steps:
            - run:
                name: "Long task (2m sleep)"
                command: |
                  echo "This task would run for 2 minutes if not killed..."
                  sleep 120
                  echo "THIS WILL NEVER PRINT"
            - run:
                name: "Success step"
                command: echo "❌ You shouldn't see this message"

workflows:
  test:
    jobs:
      - test_timeout
